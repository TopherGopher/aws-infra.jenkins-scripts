---
# tasks file for project

- name: Ensure these directories exist
  file: path={{ item }} state=directory
  with_items:
    - "{{ webroot }}/current/docroot/sites/all"
    - "{{ webroot }}/current/docroot/sites/default"

- name: Drupal - Copy settings.php into docroot/sites/default
  command: "cp {{ webroot }}/shared/settings.php {{ webroot }}/current/docroot/sites/default/settings.php"

- name: remove files
  file: >
    path="{{ webroot }}/shared/files"
    state=absent
  when: not new_site

- name: move archived files
  shell: "mv {{ archivedir }}/{{ name }}/*/sites/default/files {{ webroot }}/shared/"
  args:
    creates: "{{ webroot }}/shared/files"
  when: not new_site

- name: "Drupal - Ensure files symlink exists in webroot/"
  file: >
    src="/var/www/{{ name }}/shared/files"
    dest="{{ webroot }}/current/docroot/sites/default/files"
    state=link

- name: DROP db
  mysql_db: >
    name="{{ nmdhosting['db_name'] }}"
    state=absent
    login_user="{{ nmddb['dbcreate_user'] }}"
    login_password="{{ nmddb['dbcreate_user_password'] }}"
    login_host="{{ nmdhosting['db_host'] }}"
  when: action == 'create'

- name: CREATE db
  mysql_db: >
    name="{{ nmdhosting['db_name'] }}"
    state=present
    login_user="{{ nmddb['dbcreate_user'] }}"
    login_password="{{ nmddb['dbcreate_user_password'] }}"
    login_host="{{ nmdhosting['db_host'] }}"
  when: action == 'create'

- name: import existing db
  mysql_db: >
    name="{{ nmdhosting['db_name'] }}"
    state=import
    login_user="{{ nmddb['dbcreate_user'] }}"
    login_password="{{ nmddb['dbcreate_user_password'] }}"
    login_host="{{ nmdhosting['db_host'] }}"
    target="{{ archivedir }}/{{ name }}/{{ name }}.sql"
  when: action == 'create' and not new_site

- name: Drush site-install
  command: "{{ si_cmd }}"
  args:
    chdir: "{{ webroot }}/current/docroot"
  when: new_site

- name: ensure user/pass are set
  command: "drush -p5.5 upwd --password='{{ nmdhosting['admin_password'] }}' {{ nmdhosting['admin_username'] }}"
  args:
    chdir: "{{ webroot }}/current/docroot"
  when: action == 'create' or action == 'update' and not new_site

- name: Check if package.json exists
  stat: path="{{ webroot }}/current/package.json"
  register: package

- name: npm install
  command: "npm install --unsafe-perm"
  args:
    chdir: "{{ webroot }}/current"
  when: (action == 'create' or action == 'update') and package.stat.exists

- name: run permissions.sh
  shell: "{{ webroot }}/shared/permissions.sh"
  when: action == 'create' or action == 'update'

- name: drush updb
  command: "drush -p5.5 updb -y"
  args:
    chdir: "{{ webroot }}/current/docroot"
  when: action == 'update' and site_type == 'drupal'

- name: Drush cc
  command: "drush cc all"
  args:
    chdir: "{{ webroot }}/current/docroot"
  when: action == 'create' or action == 'update'

- name: remove the archive
  file: >
    path="{{ archivedir }}/{{ name }}"
    state=absent
