---

- name: Ensure archive dir exists (latest.yml)
  file: >
    path="{{ archivedir }}"
    state=directory
    follow=true

- name: Ensure this site's archive dir exists (latest.yml)
  file: >
    path="{{ archivedir }}/{{ name }}"
    state=directory

- name: Ensure old archive dirs gone (latest.yml)
  file: >
    path="{{ archivedir }}/{{ deploy_env }}-{{ name }}-*"
    state=absent

- name: get latest (latest.yml)
  command: "s3latest -k {{ nmddrupal['aws_access_key'] }} -sk {{ nmddrupal['aws_secret_key'] }} {{ nmddrupal['aws_bucket'] }} {{ name }}/{{ deploy_env }}-{{ name }}-"
  register: latest

- name: download latest (latest.yml)
  command: "s3download -k {{ nmddrupal['aws_access_key'] }} -sk {{ nmddrupal['aws_secret_key'] }} -np {{ nmddrupal['dlprocs'] }} -s {{ nmddrupal['dlchunk'] }} -f s3://{{ nmddrupal['aws_bucket'] }}/{{ latest.stdout }} {{ archivedir }}/"
  when: not new_site

- debug: msg="{{ archivedir }}/{{ latest.stdout | basename }}"

- debug: msg="{{ archivedir }}/{{ name }}"

#sometimes this fails
- name: unarchive latest site archive
  ignore_errors: yes
  unarchive: >
    src="{{ archivedir }}/{{ latest.stdout | basename }}"
    dest="{{ archivedir }}/{{ name }}"
    copy=no
  register: unarchived

- name: unarchive retry
  command: "tar -xzf {{ archivedir }}/{{ latest.stdout | basename }}  -C {{ archivedir }}/{{ name }}"
  when: unarchived|failed

- name: Clean Archive (latest.yml)
  command: "s3trim -k {{ nmddrupal['aws_access_key'] }} -sk {{ nmddrupal['aws_secret_key' ]}} -c {{ nmddrupal['archive_copy_count'] }} {{ nmddrupal['aws_bucket'] }} {{ name }}/{{ deploy_env }}-{{ name }}-"

#@todo validate this even works
#- name: Clean Archive
#  command: "filetrim -c {{ nmddrupal['archive_copy_count'] }} {{ nmddrupal['aws_bucket'] }} /var/archives/{{ deploy_env }}-{{ name }}-"

